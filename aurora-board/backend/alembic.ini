# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = src/aurora_board/alembic

# template for migration file names, e.g. "%%(rev)s_%%(slug)s.py"
# (filenames must be unique within a script directory)
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering a datestamp into a migration.
# set to None to use the system default, or a string like "UTC" or "EST"
# timezone =

# max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# set to 'true' to capture database schema version DDL within transaction
# defaults to 'true'
# transactional_ddl = false

# set to 'true' to generate migration stubs that use autogenerate
# revision_environment = false

# set to 'true' to allow .sql files as revisions
# sourceless = false

# output encoding, defaults to system default
# output_encoding = utf-8

# sqlalchemy.url = driver://user:pass@localhost/dbname
# Esta URL será carregada a partir de variáveis de ambiente em env.py
# Deixe comentado ou use um placeholder se preferir, mas env.py terá precedência.
sqlalchemy.url = %(DB_URL)s

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
